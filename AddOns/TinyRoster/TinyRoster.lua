------------------------------------ 輸入框名冊-- Author:M------------------------------------此表會被重載TinyRosterDB = {    SendMailNameEditBox = {},                                                   --發郵件    BankItemSearchBox = {},                                                     --銀行查找    BagItemSearchBox = {},                                                      --背包查找    BrowseName = { depands = "Blizzard_AuctionUI" },                            --拍賣場    MountJournalSearchBox = { depands = "Blizzard_Collections" },               --坐騎    HeirloomsJournalSearchBox = { depands = "Blizzard_Collections" },           --傳家寶    PetJournalSearchBox = { depands = "Blizzard_Collections" },                 --寵物    GuildItemSearchBox = { depands = "Blizzard_GuildBankUI" },                  --公會銀行    WardrobeCollectionFrameSearchBox = { depands = "Blizzard_Collections" },    --衣櫃    ["TradeSkillFrame.SearchBox"] = { depands = "Blizzard_TradeSkillUI" },      --專業技能    ["GlyphFrame.SearchBox"] = { depands = "Blizzard_GlyphUI" },                --雕紋    ["ToyBox.searchBox"] = { depands = "Blizzard_Collections" },                --玩具    ["LFGListFrame.SearchPanel.SearchBox"] = {},                                --找團    ["AchievementFrame.searchBox"] = { depands="Blizzard_AchievementUI" },      --成就    EncounterJournalSearchBox = { depands = "Blizzard_EncounterJournal" },      --指南}--按鈕數量和高度local numButton, btnHeight = 12, 18--加入/删除名冊local function toggle(list, name, delete)    local pos    if (name == "") then return end    for i, v in ipairs(list) do        if (v == name) then pos = i end    end    if (not pos) then        table.insert(list, 1, name)    elseif (delete and pos) then        table.remove(list, pos)    end    --table.sort(list, function(a, b) return string.byte(a) < string.byte(b) end)end--左鍵選擇,右鍵刪除local function onclick(self, button)    local editbox = self:GetParent().editbox    if (not editbox) then return end    if (IsControlKeyDown() and button == "RightButton") then        for k in pairs(editbox.rosterList) do            editbox.rosterList[k] = nil        end        return editbox.rosterFunc(editbox)    elseif (button == "RightButton") then        toggle(editbox.rosterList, self.text, true)        return editbox.rosterFunc(editbox)    end    editbox:SetText(self.text)    self:GetParent():Hide()    editbox.rosterAddButton:Hide()end--创建按钮local function createButton(parent, index)    local button = CreateFrame("Button", "TinyRosterFrameButton"..index, parent, "ClassicLFGListSearchAutoCompleteButtonTemplate")    button:SetAlpha(0.9)    button:SetHeight(btnHeight)    button.Label:SetJustifyH("CENTER")    button.Label:SetFont(UNIT_NAME_FONT, 14, "NORMAL")    button:RegisterForClicks("LeftButtonUp", "RightButtonUp")    button:SetScript("OnClick", onclick)    if (index == 1) then        button:SetPoint("TOPLEFT", parent, "TOPLEFT")        button:SetPoint("TOPRIGHT", parent, "TOPRIGHT")    else        button:SetPoint("TOPLEFT", _G["TinyRosterFrameButton"..(index-1)], "BOTTOMLEFT")        button:SetPoint("TOPRIGHT", _G["TinyRosterFrameButton"..(index-1)], "BOTTOMRIGHT")    endend--系統自動填充是異步行爲 空字符不觸發此函數hooksecurefunc("AutoComplete_UpdateResults", function(self, results, context)    if (self.CallbackToTinyRoster) then        if (#results == 0) then            self.CallbackToTinyRoster = false        else            TinyRosterFrame:ClearAllPoints()            TinyRosterFrame:SetPoint("TOPLEFT", self, "BOTTOMLEFT", 4, 0)            TinyRosterFrame:SetPoint("TOPRIGHT", self, "BOTTOMRIGHT", -3, 0)        end    endend)--顯示名冊 1.處理異步情況 2.context在獲得焦點時值是truelocal function ShowRosterList(editbox, context)    TinyRosterFrame.editbox = editbox    local text = editbox:GetText()    if (not AutoCompleteBox.CallbackToTinyRoster or text == "") then        TinyRosterFrame:Show()        TinyRosterFrame:ClearAllPoints()        TinyRosterFrame:SetPoint("TOPLEFT", editbox, "BOTTOMLEFT", -2, 0)        TinyRosterFrame:SetPoint("TOPRIGHT", editbox, "BOTTOMRIGHT", -3, 0)    end    local AutoCompleteFrame = editbox:GetParent().AutoCompleteFrame    if (AutoCompleteFrame and AutoCompleteFrame:IsShown()) then        TinyRosterFrame:ClearAllPoints()        TinyRosterFrame:SetPoint("TOPLEFT", AutoCompleteFrame, "BOTTOMLEFT", 7, 8)        TinyRosterFrame:SetPoint("TOPRIGHT", AutoCompleteFrame, "BOTTOMRIGHT", -4, 8)    end    if (editbox.autoCompleteParams) then        AutoCompleteBox.CallbackToTinyRoster = true    else        AutoCompleteBox.CallbackToTinyRoster = false    end    local button    local index = 1    local list = editbox.rosterList    --當記錄大於按鈕總數,用戶變更輸入之後,自動開啓模糊查詢    if (context == "userInput" and #list > numButton and strlen(text) > 0) then        list = {}        for _, v in ipairs(editbox.rosterList) do            if (string.find(v,text)) then tinsert(list,v) end         end    end    while (list[index] and index <= numButton) do        button = _G["TinyRosterFrameButton"..index]        button.text = list[index]        button:SetText(list[index])        button:Show()        index = index + 1    end    TinyRosterFrame:SetHeight(index*btnHeight)    editbox.rosterAddButton:Show()    editbox.rosterAddButton:ClearAllPoints()    editbox.rosterAddButton:SetPoint("BOTTOMLEFT", TinyRosterFrame, "BOTTOMLEFT")    editbox.rosterAddButton:SetPoint("BOTTOMRIGHT", TinyRosterFrame, "BOTTOMRIGHT")        while (_G["TinyRosterFrameButton"..index]) do        _G["TinyRosterFrameButton"..index]:Hide()        index = index + 1    endend--用戶輸入local function OnTextChanged(self, userInput)    if (userInput) then        ShowRosterList(self, "userInput")    endend--失去焦點local function OnEditFocusLost(self)    TinyRosterFrame:Hide()    self.rosterAddButton:Hide()    toggle(self.rosterList, self:GetText()) --自動保存end--獲取框架local function getEditBox(name)    local frame, subframe, thirdframe = strsplit(".", name)    if (thirdframe and _G[frame] and _G[frame][subframe]) then        return _G[frame][subframe][thirdframe]    elseif (subframe and _G[frame]) then        return _G[frame][subframe]    else        return _G[frame]    endend--讓輸入框有此功能local function fn(editboxName, config)    local editbox = getEditBox(editboxName)    if (not editbox) then return end    if (not config.list) then config.list = {} end    editbox.rosterMark = true    editbox.rosterList = config.list    editbox.rosterFunc = ShowRosterList    --editbox.autoCompleteParams = nil --去掉註釋表示關閉系統自動填充    editbox:HookScript("OnTextChanged", OnTextChanged)    editbox:HookScript("OnEditFocusGained", ShowRosterList)    editbox:HookScript("OnEditFocusLost", OnEditFocusLost)    editbox.rosterAddButton = CreateFrame("Button", nil, TinyRosterFrame, "ClassicLFGListSearchAutoCompleteButtonTemplate")    editbox.rosterAddButton:Hide()    editbox.rosterAddButton:SetHeight(btnHeight)    editbox.rosterAddButton.Label:SetFont(UNIT_NAME_FONT, 14, "THINOUTLINE")    editbox.rosterAddButton.Label:SetJustifyH("CENTER")    editbox.rosterAddButton.Label:SetTextColor(1, 0.82, 0)    editbox.rosterAddButton:SetText(SAVE..NAME)    editbox.rosterAddButton:RegisterForClicks("LeftButtonUp", "RightButtonUp")    editbox.rosterAddButton:SetScript("OnClick", function(self, button)        if (button == "LeftButton") then            local text = editbox:GetText()            if (text and text ~= "") then                toggle(editbox.rosterList, text)                editbox.rosterFunc(editbox)            end        else            editbox:SetText("")        end    end)end--創建框架do    local function OnEvent(self, event, ...)        local arg1 = ...        if (event == "VARIABLES_LOADED") then            self:UnregisterEvent("VARIABLES_LOADED")            for editboxName, v in pairs(TinyRosterDB) do                if (not v.depands or (v.depands and IsAddOnLoaded(v.depands))) then                    fn(editboxName, v)                end            end        end        if (event == "ADDON_LOADED") then            for editboxName, v in pairs(TinyRosterDB) do                if (v.depands and v.depands == arg1 and not getEditBox(editboxName).rosterMark) then                    fn(editboxName, v)                end            end        end    end    local TinyRosterFrame = CreateFrame("Frame", "TinyRosterFrame", UIParent)    TinyRosterFrame:Hide()    TinyRosterFrame:SetClampedToScreen(true)    TinyRosterFrame:SetFrameStrata("DIALOG")    TinyRosterFrame:SetSize(136, numButton*btnHeight)    TinyRosterFrame.BottomLeftBorder = TinyRosterFrame:CreateTexture(nil, "ARTWORK", "UI-Frame-BotCornerLeft")    TinyRosterFrame.BottomLeftBorder:ClearAllPoints()    TinyRosterFrame.BottomLeftBorder:SetPoint("BOTTOMLEFT", -7, -7)    TinyRosterFrame.BottomRightBorder = TinyRosterFrame:CreateTexture(nil, "ARTWORK", "UI-Frame-BotCornerRight")    TinyRosterFrame.BottomRightBorder:ClearAllPoints()    TinyRosterFrame.BottomRightBorder:SetPoint("BOTTOMRIGHT", 4, -7)    TinyRosterFrame.BottomBorder = TinyRosterFrame:CreateTexture(nil, "ARTWORK", "_UI-Frame-Bot")    TinyRosterFrame.BottomBorder:ClearAllPoints()    TinyRosterFrame.BottomBorder:SetPoint("BOTTOMLEFT", TinyRosterFrame.BottomLeftBorder, "BOTTOMRIGHT")    TinyRosterFrame.BottomBorder:SetPoint("BOTTOMRIGHT", TinyRosterFrame.BottomRightBorder, "BOTTOMLEFT")    TinyRosterFrame.LeftBorder = TinyRosterFrame:CreateTexture(nil, "ARTWORK", "!UI-Frame-LeftTile")    TinyRosterFrame.LeftBorder:ClearAllPoints()    TinyRosterFrame.LeftBorder:SetPoint("TOP", 0, 1)    TinyRosterFrame.LeftBorder:SetPoint("BOTTOMLEFT", TinyRosterFrame.BottomLeftBorder, "TOPLEFT")    TinyRosterFrame.RightBorder = TinyRosterFrame:CreateTexture(nil, "ARTWORK", "!UI-Frame-RightTile")    TinyRosterFrame.RightBorder:ClearAllPoints()    TinyRosterFrame.RightBorder:SetPoint("TOP", 0, 1)    TinyRosterFrame.RightBorder:SetPoint("BOTTOMRIGHT", TinyRosterFrame.BottomRightBorder, "TOPRIGHT", 1, 0)    TinyRosterFrame.TopBorder = TinyRosterFrame:CreateTexture(nil, "ARTWORK", "_UI-Frame-Bot")    TinyRosterFrame.TopBorder:ClearAllPoints()    TinyRosterFrame.TopBorder:SetPoint("TOPLEFT", TinyRosterFrame, "TOPLEFT", -2, 3)    TinyRosterFrame.TopBorder:SetPoint("BOTTOMRIGHT", TinyRosterFrame, "TOPRIGHT", 2, -3)    for i = 1, numButton do createButton(TinyRosterFrame, i) end    TinyRosterFrame:SetScript("OnEvent", OnEvent)    TinyRosterFrame:RegisterEvent("VARIABLES_LOADED")    TinyRosterFrame:RegisterEvent("ADDON_LOADED")end