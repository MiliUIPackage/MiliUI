------------------------------------------------ 聊天超鏈接增加物品等級 (支持大祕境鑰匙等級)-- @Author:M----------------------------------------------local tooltip = CreateFrame("GameTooltip", "ChatLinkLevelTooltip", UIParent, "GameTooltipTemplate")local ItemLevelPattern = gsub(ITEM_LEVEL, "%%d", "(%%d+)")local ARMOR = ARMOR or "Armor"local WEAPON = WEAPON or "Weapon"local RELICSLOT = RELICSLOT or "Relic"-- local spam--获取物品实际等级local function GetItemLevelAndTexture(ItemLink)    local _, _, _, _, _, class, subclass, _, equipSlot, texture, _, classId, subClassId = GetItemInfo(ItemLink)    if (not texture) then return end    local text, level, slotText    tooltip:SetOwner(UIParent, "ANCHOR_NONE")    tooltip:ClearLines()    tooltip:SetHyperlink(ItemLink)    for i = 2, 4 do        text = _G[tooltip:GetName().."TextLeft"..i]:GetText() or ""        level = string.match(text, ItemLevelPattern)        if (level) then break end    end    if (equipSlot and string.find(equipSlot, "INVTYPE_")) then        slotText = _G[equipSlot]		--加上護甲類型		--code borrowed from ItemLinkLevel		if (classId == LE_ITEM_CLASS_ARMOR and subClassId == 0) then		-- 不顯示雜項 (戒指、項鍊、飾品)			elseif (classId == LE_ITEM_CLASS_ARMOR and equipSlot == "INVTYPE_CLOAK") then		-- 不顯示布甲披風		elseif (classId == LE_ITEM_CLASS_WEAPON) then		-- 武器			slotText = slotText .. subclass		else			slotText = subclass .. slotText:gsub("部","")		end		--加上+洞		--code borrowed from ItemLinkLevel		if (ItemHasSockets(ItemLink)) then slotText = "+洞 " .. slotText end    elseif (class == ARMOR) then        slotText = class    elseif (subclass and string.find(subclass, RELICSLOT)) then        slotText = PLH_GetRelicType(ItemLink) .. RELICSLOT    end	    if (level and slotText) then        level = level .. " " .. slotText    end    return level, textureend--等级图标显示local function SetChatLinkLevel(Hyperlink)    local link = string.match(Hyperlink, "|H(.-)|h")    local level, texture = GetItemLevelAndTexture(link)    if (level) then        Hyperlink = Hyperlink:gsub("|h%[(.-)%]|h", "|h["..level.."：%1]|h")    end    return Hyperlinkend--鑰匙等級--[[local function SetChatLinkKeystoneLevel(Hyperlink)    local map, level, name = string.match(Hyperlink, "|Hkeystone:(%d+):(%d+):.-|h(.-)|h")    if (map and level and not string.find(name, level)) then        local name = C_ChallengeMode.GetMapInfo(map)        Hyperlink = Hyperlink:gsub("|h%[(.-)%]|h", "|h[傳奇+"..level.."："..name.."]|h")    end    return Hyperlinkend--]]--过滤器local function filter(self, event, msg, ...)    if (not TinyChatDB or not TinyChatDB.hideLinkLevel) then        msg = msg:gsub("(|Hitem:%d+:.-|h.-|h)", SetChatLinkLevel)    end	--[[    if (not TinyChatDB or not TinyChatDB.hideKeystoneLevel) then        msg = msg:gsub("(|Hkeystone:%d+:.-|h.-|h)", SetChatLinkKeystoneLevel)    end	--]]    return false, msg, ...end--[[local function filterSystem(self, event, msg, ...)		--過濾公會樂透密語的洗頻訊息	local i	i,_ = msg:find("未找到名為")	if (i ~= nil) then		if (msg == spam) then			return true		else			spam = msg		end	end		return false, msg, ...end--]]--檢查是否帶洞--function borrowed from ItemLinkLevelfunction ItemHasSockets(itemLink)	local result = false	local tooltip = CreateFrame("GameTooltip", "ItemLinkLevelSocketTooltip", nil, "GameTooltipTemplate")	tooltip:SetOwner(UIParent, 'ANCHOR_NONE')	tooltip:ClearLines()	for i = 1, 30 do		local texture = _G[tooltip:GetName().."Texture"..i]		if texture then			texture:SetTexture(nil)		end	end	tooltip:SetHyperlink(itemLink)	for i = 1, 30 do		local texture = _G[tooltip:GetName().."Texture"..i]		local textureName = texture and texture:GetTexture()		if textureName then			local canonicalTextureName = string.gsub(string.upper(textureName), "\\", "/")			result = string.find(canonicalTextureName, escapeSearchString("ITEMSOCKETINGFRAME/UI-EMPTYSOCKET-"))		end	end	return resultend-- Inhibit Regular Expression magic characters ^$()%.[]*+-?)-- function borrowed from ItemLinkLevelfunction escapeSearchString(str)	return str:gsub("(%W)","%%%1")end--取得聖物類型-- function borrowed from PersonalLootHelperfunction PLH_GetRelicType(item)	local PLH_RELIC_TOOLTIP_TYPE_PATTERN = _G.RELIC_TOOLTIP_TYPE:gsub('%%s', '(.+)')	local relicType = nil		if item ~= nil then		local index = 1		local t		while not relicType and _G[tooltip:GetName().."TextLeft"..index] do			t = _G[tooltip:GetName().."TextLeft"..index]:GetText()			if t ~= nil then				relicType = t:match(PLH_RELIC_TOOLTIP_TYPE_PATTERN)							end			index = index + 1		end				tooltip:Hide()	end		return relicTypeendChatFrame_AddMessageEventFilter("CHAT_MSG_CHANNEL", filter)ChatFrame_AddMessageEventFilter("CHAT_MSG_SAY", filter)ChatFrame_AddMessageEventFilter("CHAT_MSG_YELL", filter)ChatFrame_AddMessageEventFilter("CHAT_MSG_WHISPER", filter)ChatFrame_AddMessageEventFilter("CHAT_MSG_BN_WHISPER", filter)ChatFrame_AddMessageEventFilter("CHAT_MSG_WHISPER_INFORM", filter)ChatFrame_AddMessageEventFilter("CHAT_MSG_RAID", filter)ChatFrame_AddMessageEventFilter("CHAT_MSG_RAID_LEADER", filter)ChatFrame_AddMessageEventFilter("CHAT_MSG_PARTY", filter)ChatFrame_AddMessageEventFilter("CHAT_MSG_PARTY_LEADER", filter)ChatFrame_AddMessageEventFilter("CHAT_MSG_GUILD", filter)ChatFrame_AddMessageEventFilter("CHAT_MSG_BATTLEGROUND", filter)ChatFrame_AddMessageEventFilter("CHAT_MSG_LOOT", filter)-- ChatFrame_AddMessageEventFilter("CHAT_MSG_SYSTEM", filterSystem)